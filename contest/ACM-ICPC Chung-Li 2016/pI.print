     1	#include <cstdio>
     2	#include <cstdlib>
     3	#include <vector>
     4	#include <string.h>
     5	using namespace std;
     6	vector<int> G[50], GG[50];
     7	int n,m;
     8	int in[50];
     9	int inin[50];
    10	int ans[50];
    11	int start,tp;
    12	bool NY[50];
    13	bool wak[50];
    14	void input(){
    15		for(int i = 0 ;i < 50 ;i++){
    16			inin[i]=in[i] =0;
    17			wak[i]=NY[i]=false;
    18			G[i].clear();
    19			GG[i].clear();
    20		}
    21		scanf("%d",&n);
    22		if(n == 0) exit(0);
    23		scanf("%d", &m);
    24		tp = m;
    25		int a, b;
    26		for(int i = 0 ;i < m ;i++){
    27			scanf("%d %d",&a ,&b);
    28			G[a].push_back(b);
    29			G[b].push_back(a);
    30			in[a] ++;  in[b] ++;
    31		}
    32		for(int i = 1 ;i <= n ;i++){
    33			if(in[i] > 1) NY[i]=true;
    34		}
    35		for(int i = 1 ;i <=n ;i++){
    36			if(NY[i]){
    37				for(int j = 0;j < G[i].size(); j++){
    38					if(NY[ G[i][j] ]){
    39						GG[i].push_back(G[i][j]);
    40						inin[i]++;
    41					}
    42				}
    43			}
    44		}
    45		for(int i = 1 ;i <= n ;i++){
    46			if(GG[i].size() == 1)	{
    47				start = i;
    48				ans[i] = 0;
    49				break;
    50			}
    51		}
    52	}
    53	void dfs(int now, int lv){
    54		wak[now]=true;
    55		for(int i = 0 ;i < G[now].size() ;i++)	{
    56			int next = G[now][i];
    57			if(!NY[next]){
    58				if(ans[next] = ans[now]+lv*tp);
    59				tp--;
    60			}
    61		}
    62		for(int i = 0 ;i < GG[now].size() ;i++){
    63			int next = GG[now][i];
    64			if(!wak[next]){
    65				ans[next] = ans[now]+lv*tp;
    66				tp--;
    67				dfs(next,-lv);
    68			}
    69		}
    70	
    71	}
    72	void solve(){
    73		dfs(start,1);
    74		for(int i = 1 ;i <= n; i++){
    75			printf("%d ",ans[i]);
    76		}
    77		puts("");
    78	}
    79	int main(){
    80		while(1){
    81			input();
    82			solve();
    83		}
    84	}
